import os

from aiogram import F
from aiogram import types
from aiogram.fsm.context import FSMContext
from aiogram.types import FSInputFile
from aiogram.types import Message
from loguru import logger

from handlers.raport_handlers import perform_database_operations
from keyboards.welcome_keyboard import return_start_menu_keyboard, keyboard_for_report_2024, \
    create_feedback_and_return_to_menu_keyboard
from system.global_variables import Form_2024
from system.system import dp, bot, router


@router.callback_query(F.data == "rap_2024")
async def process_callback_month_2024(callback_query: types.CallbackQuery):
    """–ö–Ω–æ–ø–∫–∏ —Å –º–µ—Å—è—Ü–∞–º–∏ —Ä–∞–ø–æ—Ä—Ç–∞"""
    await bot.edit_message_text(
        chat_id=callback_query.message.chat.id,
        message_id=callback_query.message.message_id,
        text="üìÖ –í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü:",
        reply_markup=keyboard_for_report_2024()
    )

@router.callback_query(F.data == "01_jan_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "02_feb_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "03_mar_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "04_apr_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "05_may_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "06_jun_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "07_jul_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "08_aug_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "09_sep_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "10_oct_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "11_nov_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)

@router.callback_query(F.data == "12_dec_rap_2024")
async def process_callback_monthh_2024(callback_query: types.CallbackQuery, state: FSMContext):
    """–†–∞–ø–æ—Ä—Ç–∞ –ú–∞—Ä—Ç 2023"""
    month = callback_query.data
    logger.info(f'–ó–∞–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    await state.update_data(month=month)
    await bot.send_message(callback_query.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —É—á–∞—Å—Ç–∫–∞:")
    await state.set_state(Form_2024.district_2024)


list_of_plots_2024 = {110100: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
                      110110: "–¢–µ—Ö.—Å–ª—É–∂–±–∞",
                      110120: "–ü—Ä–æ–∏–∑–≤–æ–¥.—Å–ª—É–∂–±–∞",
                      110130: "–¢–µ—Ö–Ω.—Å–ª—É–∂–±–∞",
                      110140: "–°–û–¢ –∏ –¢–ë",
                      110150: "–ú–∞—Ä–∫—à–µ–π–¥–µ—Ä—Å–∫–∞—è —Å–ª—É–∂–±–∞",
                      110160: "–ì–µ–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–ª—É–∂–±–∞",
                      110170: "–≠–ú–°",
                      110191: "–ü–≠–û",
                      110192: "–û–û–¢–∏–ó–ü",
                      110194: "–û–û–¢, –ó–ü –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è",
                      110193: "–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π —Å–µ–∫—Ç–æ—Ä",
                      110200: "–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è",
                      110211: "–°–µ–∫—Ç–æ—Ä –¥–æ–≥–æ–≤–æ—Ä–Ω–æ–π —Ä–∞–±–æ—Ç—ã",
                      110220: "–°–µ–∫—Ç–æ—Ä –º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–æ-—Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–Ω–∞–±–∂–µ–Ω–∏—è",
                      110230: "–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤",
                      110240: "–°–µ–∫—Ç–æ—Ä –ø–æ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–º –≤–æ–ø—Ä–æ—Å–∞–º",
                      110250: "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π —Å–µ–∫—Ç–æ—Ä",
                      120110: "–£—á.‚Ññ 1",
                      120210: "–£–ü–† ‚Ññ 1",
                      120220: "–£–ü–† ‚Ññ 2",
                      120400: "–£—á.–®–¢",
                      120410: "–£–ö–¢ ‚Ññ 1",
                      120420: "–£–ö–¢ ‚Ññ 2",
                      120450: "–£–ö–¢",
                      120500: "–£—á.–†–í–†",
                      120520: "–£—á.–†–í–† ‚Ññ2",
                      120610: "–£—á.–ú–î–ì–û ‚Ññ 1",
                      120700: "–í–¢–ë",
                      120800: "–£—á.–í–†",
                      120900: "–£—á–∞—Å—Ç–æ–∫ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
                      121000: "–í–æ–¥–æ–æ—Ç–ª–∏–≤",
                      121010: "–£—á–∞—Å—Ç–æ–∫ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è ‚Ññ1",
                      121020: "–£—á–∞—Å—Ç–æ–∫ —Å—Ç–∞—Ü–∏–æ–Ω–∞—Ä–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è ‚Ññ2",
                      121030: "–≠–ª–µ–∫—Ç—Ä–æ—Ü–µ—Ö",
                      121040: "–£—á–∞—Å—Ç–æ–∫ –ø–æ —Ä–µ–º–æ–Ω—Ç—É –∑–∞–±–æ–π–Ω–æ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
                      121050: "–£—á–∞—Å—Ç–æ–∫ –ø–æ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—é –º–µ—Ö–∞–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∫—Ä–µ–ø–∏",
                      121060: "–£—á–∞—Å—Ç–æ–∫ –ø–æ —Ä–µ–º–æ–Ω—Ç—É –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã—Ö –≤—ã—Ä–∞–±–æ—Ç–æ–∫",
                      121070: "–ö–æ—Ç–µ–ª—å–Ω–∞—è",
                      121100: "–û—Ç–¥–µ–ª —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞ —É–≥–ª—è",
                      121110: "–£—á–∞—Å—Ç–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å–∏—Å—Ç–µ–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ —Å–≤—è–∑–∏",
                      121200: "–°–≤—è–∑—å",
                      121400: "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ-–±—ã—Ç–æ–≤–æ–π –∫–æ–º–±–∏–Ω–∞—Ç",
                      121500: "–ó–¥—Ä–∞–≤–ø—É–Ω–∫—Ç",
                      121600: "–£—á–∞—Å—Ç–æ–∫ '–û—Ö—Ä–∞–Ω–∞'",
                      121710: "–ê–≤—Ç–æ—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ã–π —É—á–∞—Å—Ç–æ–∫",
                      121730: "–£—á–∞—Å—Ç–æ–∫ –ø–æ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—é –ø–æ—Ä–æ–¥–Ω–æ–≥–æ –æ—Ç–≤–∞–ª–∞",
                      121801: "–û–±–æ–≥–∞—Ç–∏—Ç–µ–ª—å–Ω–∞—è —Ñ–∞–±—Ä–∏–∫–∞",
                      100000: "–ú–æ–±–∏–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ",
                    #   121810: "–ò–¢–† –û–§",
                    #   121820: "–û–ü –û–§",
                    #   121830: "–≠–ª–µ–∫—Ç—Ä–æ—Ü–µ—Ö –û–§",
                    #   121840: "–ú–æ–Ω—Ç–∞–∂–Ω–æ-–¥–µ–º–æ–Ω—Ç–∞–∂–Ω–∞—è –≥—Ä—É–ø–ø–∞ –û–§",
                    #   121850: "–†–µ–º–æ–Ω—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞ –û–§",
                    #   121860: "–£–≥–ª–µ—Ö–∏–º–∏—á–µ—Å–∫–∞—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—è –û–§",
                    #   121870: "–ê–ë–ö –û–§",
                      121900: "–°–ª—É–∂–±–∞ —Å–∫–ª–∞–¥—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞",
                      121930: "–°–∫–ª–∞–¥ ‚Ññ1",
                      121940: "–°–∫–ª–∞–¥ ‚Ññ2",
                      121950: "–°–∫–ª–∞–¥ ‚Ññ3",
                      121960: "–°–∫–ª–∞–¥ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤",
                      121972: "–°–∫–ª–∞–¥ ‚Ññ4",
                      121970: "–£–≥–æ–ª—å–Ω—ã–π —Å–∫–ª–∞–¥",
                      121971: "–õ–µ—Å–Ω–æ–π —Å–∫–ª–∞–¥",
                      122100: "–£—á–∞—Å—Ç–æ–∫ '–ö–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —ç–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞–Ω—Ü–∏—è'",
                      122200: "–£—á–∞—Å—Ç–æ–∫ –ø–æ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é –∏ —Ä–µ–º–æ–Ω—Ç—É –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è",
                      122400: "–£—á–∞—Å—Ç–æ–∫ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ-–º–æ–Ω—Ç–∞–∂–Ω—ã—Ö —Ä–∞–±–æ—Ç",
                      130010: "–û–±—â–µ–∂–∏—Ç–∏–µ ‚Ññ1",
                      130020: "–ì–æ—Å—Ç–∏–Ω–∏—Ü–∞ '–û–ª–∏–º–ø'",
                      130030: "–ü–¢–ö '–î–æ–Ω–µ—Ü–∫–∏–π'"}

report_no_text_found = ("üö´ <b>–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ —Ä–∞–ø–æ—Ä—Ç –Ω–µ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω.</b>\n"
                        "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ —É—á–∞—Å—Ç–∫–∞.\n\n"
                        "–ù–∞–∂–º–∏—Ç–µ <b>'‚Ü©Ô∏è  –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é'</b>, —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å.")

@router.message(Form_2024.district_2024)
async def process_district_2024(message: Message, state: FSMContext):
    data = await state.get_data()  # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    month = data.get('month')  # –ü–æ–ª—É—á–∞–µ–º –º–µ—Å—è—Ü
    logger.info(f'–í–æ–ø—Ä–æ—Å —Ä–∞–ø–æ—Ä—Ç–∞ –ø–æ –º–µ—Å—è—Ü—É {month}')
    district = message.text

    try:
        district_name = list_of_plots_2024[int(district)]
        # –ó–∞–ø–∏—Å—å –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        user_id = message.from_user.id
        username = message.from_user.username
        timestamp = str(message.date)
        file_name = district + '.xls'
        logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: username {username}, ID {user_id} –≤ {timestamp} –∑–∞–ø—Ä–æ—Å–∏–ª —Ä–∞–ø–æ—Ä—Ç —É—á–∞—Å—Ç–∫–∞ {district_name}')
        perform_database_operations(user_id, username, timestamp, file_name)
        # –ü–æ–∏—Å–∫ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞
        file_path = f"raports/rap_2024/{month}/{district}.xls"
        if os.path.isfile(file_path):

            keyboard_return = return_start_menu_keyboard()
            if month == "01_jan_rap_2024":
                raport_month: str = "–Ø–Ω–≤–∞—Ä—å 2024"
            if month == "02_feb_rap_2024":
                raport_month: str = "–§–µ–≤—Ä–∞–ª—å 2024"
            if month == "03_mar_rap_2024":
                raport_month: str = "–ú–∞—Ä—Ç 2024"
            if month == "04_apr_rap_2024":
                raport_month: str = "–ê–ø—Ä–µ–ª—å 2024"
            if month == "05_may_rap_2024":
                raport_month: str = "–ú–∞–π 2024"
            if month == "06_jun_rap_2024":
                raport_month: str = "–ò—é–Ω—å 2024"
            if month == "07_jul_rap_2024":
                raport_month: str = "–ò—é–ª—å 2024"
            if month == "08_aug_rap_2024":
                raport_month: str = "–ê–≤–≥—É—Å—Ç 2024"
            if month == "09_sep_rap_2024":
                raport_month: str = "–°–µ–Ω—Ç—è–±—Ä—å 2024"
            if month == "10_oct_rap_2024":
                raport_month: str = "–û–∫—Ç—è–±—Ä—å 2024"
            if month == "11_nov_rap_2024":
                raport_month: str = "–ù–æ—è–±—Ä—å 2024"
            if month == "12_dec_rap_2024":
                raport_month: str = "–î–µ–∫–∞–±—Ä—å 2024"

            file = FSInputFile(file_path)

            await bot.send_document(message.from_user.id,
                                    document=file,
                                    caption=(f"<b>üìÖ {raport_month}\n\n"
                                                   f"–†–∞–ø–æ—Ä—Ç —É—á–∞—Å—Ç–∫–∞:</b> {district_name}"),
                                    parse_mode="HTML",
                                    reply_markup=keyboard_return)  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        else:
            # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
            keyboard = create_feedback_and_return_to_menu_keyboard()
            await message.answer(report_no_text_found, reply_markup=keyboard)
    except KeyError:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ"
        keyboard = create_feedback_and_return_to_menu_keyboard()
        await message.answer(report_no_text_found, reply_markup=keyboard)
    await state.clear()


def register_raport_handler_2024():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å"""
    dp.register_message_handler(process_callback_month_2024)
