# -*- coding: utf-8 -*-

from aiogram import types, F
import openpyxl
from datetime import date
from keyboards.welcome_keyboard import keyboard_go_back
from system.system import dp, bot, router


def determining_the_birthday():
    """–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞"""
    # üìÖ –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –µ—ë –∫–∞–∫ –î–î.–ú–ú
    today = date.today()
    current_day_month = today.strftime("%d.%m")

    # üìÅ –û—Ç–∫—Ä—ã–≤–∞–µ–º Excel-—Ñ–∞–π–ª –∏ –≤—ã–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –ª–∏—Å—Ç
    workbook = openpyxl.load_workbook("settings/–°–ø–∏—Å–æ—á–Ω—ã–π_—Å–æ—Å—Ç–∞–≤_20200101.xlsx")
    sheet = workbook.active

    # üéâ –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ –¥–Ω—è—Ö —Ä–æ–∂–¥–µ–Ω–∏—è
    birthday_messages = []

    # üîç –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Å 6 –ø–æ 2800 (–≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ), —Å—Ç–æ–ª–±—Ü—ã F (6) –¥–æ L (12)
    for row in sheet.iter_rows(
            min_row=6,
            max_row=2800,
            min_col=6,
            max_col=12,
            values_only=True
    ):
        # üóìÔ∏è –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–π –∫–æ–ª–æ–Ω–∫–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ (L ‚Äî –∏–Ω–¥–µ–∫—Å 6)
        birthday_cell = row[6]
        # ‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–æ–∫—É, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π
        if not isinstance(birthday_cell, str):
            continue
        # üìÜ –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–µ 5 —Å–∏–º–≤–æ–ª–æ–≤ (—Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú)
        day_month = birthday_cell[:5]
        # üéÇ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π
        if day_month == current_day_month:
            # üë§ –ò–º—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ G (–∏–Ω–¥–µ–∫—Å 1 –≤ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–µ)
            employee_name = row[1]
            # üßæ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É–≤–æ–ª—å–Ω–µ–Ω–∏–∏ (—Å—Ç–æ–ª–±–µ—Ü I ‚Äî –∏–Ω–¥–µ–∫—Å 3)
            dismissal_date = row[3]
            # üí¨ –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            if dismissal_date is None:
                birthday_messages.append(f"üë§ –ò–º—è:: {employee_name}")
            else:
                birthday_messages.append(f"üë§ –ò–º—è: {employee_name}\n‚õî –£–≤–æ–ª–µ–Ω(–∞): {dismissal_date}")

    # üì¢ –í—ã–≤–æ–¥–∏–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
    return birthday_messages


@router.callback_query(F.data == "birthday")
async def birthday_handlers(callback_query: types.CallbackQuery):
    """–ò–º–µ–Ω–∏–Ω–Ω–∏–∫–∏ –Ω–∞ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏"""

    birthday_messages = determining_the_birthday()

    if not birthday_messages:
        message_text = "‚ùå –°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏–π üòï"
    else:
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏
        formatted_birthdays = "\n\n".join(birthday_messages)
        message_text = (
            f"üéà –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è!\n\n"
            f"–°–µ–≥–æ–¥–Ω—è —Å–≤–æ–π –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –æ—Ç–º–µ—á–∞—é—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è ‚Äî –∫–∞–∫ –Ω—ã–Ω–µ —Ä–∞–±–æ—Ç–∞—é—â–∏–µ, —Ç–∞–∫ –∏ —Ç–µ, –∫—Ç–æ —Ä–∞–Ω–µ–µ –±—ã–ª —Å –Ω–∞–º–∏.\n"
            f"–ñ–µ–ª–∞–µ–º –≤—Å–µ–º –∫—Ä–µ–ø–∫–æ–≥–æ –∑–¥–æ—Ä–æ–≤—å—è, –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è –∏ –Ω–æ–≤—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —É—Å–ø–µ—Ö–æ–≤! üéä\n\n"
            f"{formatted_birthdays}\n"
        )

    await bot.send_message(
        callback_query.from_user.id,
        message_text,
        reply_markup=keyboard_go_back()
    )


def register_birthday_handlers():
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º handlers –¥–ª—è üéÇ –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–æ–≤"""
    dp.register_message_handler(birthday_handlers)
